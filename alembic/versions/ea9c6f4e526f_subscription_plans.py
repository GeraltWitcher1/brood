"""subscription plans

Revision ID: ea9c6f4e526f
Revises: 488cd5a21817
Create Date: 2021-01-31 13:35:57.411853

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea9c6f4e526f'
down_revision = '488cd5a21817'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kv_brood',
    sa.Column('kv_key', sa.String(), nullable=False),
    sa.Column('kv_value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('kv_key', name=op.f('pk_kv_brood')),
    sa.UniqueConstraint('kv_key', name=op.f('uq_kv_brood_kv_key'))
    )
    op.create_table('subscription_plans',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('stripe_product_id', sa.String(), nullable=True),
    sa.Column('stripe_price_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscription_plans')),
    sa.UniqueConstraint('id', name=op.f('uq_subscription_plans_id'))
    )
    op.create_table('subscriptions',
    sa.Column('group_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('subscription_plan_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('seats', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='fk_subscriptions_group_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], name='fk_subscription_plans_subscription_plan_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'subscription_plan_id', name=op.f('pk_subscriptions'))
    )

    # Manual part
    op.execute("ALTER TYPE user_type RENAME TO _user_type;")
    sa.Enum('owner', 'admin', 'member', name='user_type').create(op.get_bind())
    op.execute("ALTER TABLE group_users ALTER COLUMN user_type TYPE user_type USING user_type::text::user_type;")
    sa.Enum('owner', 'member', name='_user_type').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    op.drop_table('subscription_plans')
    op.drop_table('kv_brood')

    # Manual part
    op.execute("ALTER TYPE user_type RENAME TO _user_type;")
    sa.Enum('owner', 'member', name='user_type').create(op.get_bind())
    op.execute("ALTER TABLE group_users ALTER COLUMN user_type TYPE user_type USING user_type::text::user_type;")
    sa.Enum('owner', 'admin', 'member', name='_user_type').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
