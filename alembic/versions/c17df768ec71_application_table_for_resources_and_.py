"""Application table for resources and users

Revision ID: c17df768ec71
Revises: b1c643d0d50a
Create Date: 2021-07-14 09:42:24.456162

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c17df768ec71'
down_revision = 'b1c643d0d50a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applications',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('group_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='fk_applications_group_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_applications')),
    sa.UniqueConstraint('id', name=op.f('uq_applications_id'))
    )
    op.add_column('users', sa.Column('application_id', postgresql.UUID(as_uuid=True), nullable=True))

    # Manual
    op.execute("CREATE UNIQUE INDEX uq_users_normalized_email_application_id ON users (normalized_email, application_id) WHERE application_id IS NOT NULL;")
    op.execute("CREATE UNIQUE INDEX uq_users_normalized_email_no_application_id ON users (normalized_email) WHERE application_id IS NULL;")
    op.execute("CREATE UNIQUE INDEX uq_users_username_application_id ON users (username, application_id) WHERE application_id IS NOT NULL;")
    op.execute("CREATE UNIQUE INDEX uq_users_username_no_application_id ON users (username) WHERE application_id IS NULL;")

    op.drop_index('ix_users_normalized_email', table_name='users')
    op.create_index(op.f('ix_users_normalized_email'), 'users', ['normalized_email'], unique=False)
    op.drop_index('ix_users_username', table_name='users')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_foreign_key('fk_users_applications_id', 'users', 'applications', ['application_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DELETE FROM users WHERE application_id is NOT NULL")
    op.drop_constraint('fk_users_applications_id', 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.drop_index(op.f('ix_users_normalized_email'), table_name='users')
    op.create_index('ix_users_normalized_email', 'users', ['normalized_email'], unique=True)

    # Manual
    op.drop_index(op.f('uq_users_username_application_id'), table_name='users')
    op.drop_index(op.f('uq_users_username_no_application_id'), table_name='users')
    op.drop_index(op.f('uq_users_normalized_email_application_id'), table_name='users')
    op.drop_index(op.f('uq_users_normalized_email_no_application_id'), table_name='users')
    
    op.drop_column('users', 'application_id')
    op.drop_table('applications')
    # ### end Alembic commands ###
